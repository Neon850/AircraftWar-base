@startuml
'https://plantuml.com/class-diagram
PropFactory <|.. BloodPropFactory
PropFactory <|.. BombPropFactory
PropFactory <|.. BulletPropFactory

Game ..> AbstractAircraft
Game ..> AbstractProp
Game ..> EnemyFactory
Game ..> PropFactory

EnemyFactory<|..MobEnemyFactory
EnemyFactory<|..EliteEnemyFactory
EnemyFactory<|..BossEnemyFactory

AbstractAircraft <|-- MobEnemy
AbstractAircraft <|-- EliteEnemy
AbstractAircraft <|-- BossEnemy

EliteEnemy ..> AbstractProp

EliteEnemyFactory ..> EliteEnemy
MobEnemyFactory ..> MobEnemy
BossEnemyFactory ..> BossEnemy

AbstractProp <|--BloodProp
AbstractProp <|--BombProp
AbstractProp <|--BulletProp

BloodPropFactory ..> BloodProp
BombPropFactory ..> BombProp
BulletPropFactory ..> BulletProp

interface PropFactory{
    + generateProp(int locationX, int locationY, int speedX, int speedY):AbstractProp
}
class BloodPropFactory{
    + generateProp(int locationX, int locationY, int speedX, int speedY):AbstractProp
}
class BombPropFactory
{
    + generateProp(int locationX, int locationY, int speedX, int speedY):AbstractProp
}
class BulletPropFactory
{
    + generateProp(int locationX, int locationY, int speedX, int speedY):AbstractProp
}

interface EnemyFactory
{
    + generateEnemy(int locationX, int locationY, int speedX, int speedY, int hp):AbstractAircraft
}

class MobEnemyFactory
{
    + generateEnemy(int locationX, int locationY, int speedX, int speedY, int hp):AbstractAircraft
}
class EliteEnemyFactory
{
    + generateEnemy(int locationX, int locationY, int speedX, int speedY, int hp):AbstractAircraft
}
class BossEnemyFactory
{
    + generateEnemy(int locationX, int locationY, int speedX, int speedY, int hp):AbstractAircraft
}

abstract class AbstractAircraft
{
	# axHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + {abstract} shoot():List<BaseBullet>
 }




class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}
class EliteEnemy {
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + generateProp(List<AbstractProp>)ï¼švoid
}
class BossEnemy {
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}


abstract class AbstractProp
{
    - power:int
    + AbstractProp(int locationX, int locationY, int speedX, int speedY)
    + forward():void
}
class BloodProp {
    + BloodProp(int locationX, int locationY,
     int speedX, int speedY)
}
class BombProp {
    + BombProp(int locationX, int locationY,
     int speedX, int speedY)
}
class BulletProp {
    + BulletProp(int locationX, int locationY,
     int speedX, int speedY)
}

@enduml